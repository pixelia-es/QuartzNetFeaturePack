<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="XmlLoaderSchema"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
      xmlns="http://quartznet.sourceforge.net/XmlLoaderSchema"
      targetNamespace="http://quartznet.sourceforge.net/XmlLoaderSchema"
      elementFormDefault="qualified"
      version="2.0">

  <xs:element name="schedulerConfiguration">
    <xs:annotation>
      <xs:documentation>Root level node</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence maxOccurs="1">
        <xs:element name="calendars" type="calendars"></xs:element>
        <xs:element name="jobs" type="jobs"></xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  
  <xs:complexType name="listeners">
    <xs:sequence maxOccurs="unbounded">
      <xs:element name="schedulerListener" type="schedulerListener" maxOccurs="unbounded" minOccurs="0"></xs:element>
      <xs:element name="triggerListener" type="triggerListener" maxOccurs="unbounded" minOccurs="0"></xs:element>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="schedulerListener">
    <xs:sequence maxOccurs="1">

    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="triggerListener">
    <xs:sequence maxOccurs="1">
      
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="calendars">
    <xs:sequence maxOccurs="unbounded">
      <xs:element name="cronCalendar" type="cronCalendar" maxOccurs="unbounded" minOccurs="0"></xs:element>
      <xs:element name="dailyCalendar" type="dailyCalendar" maxOccurs="unbounded" minOccurs="0"></xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="cronCalendar">
    <xs:sequence maxOccurs="1">
      <xs:element name="name" minOccurs="1"></xs:element>
      <xs:element name="cronExpression" minOccurs="1" type="cronExpression"></xs:element>
      <xs:element name="description" minOccurs="0" type="xs:string"></xs:element>
      <xs:element name="replaceCalendar" minOccurs="0" type="xs:boolean"></xs:element>
      <xs:element name="updateTriggers" minOccurs="0" type="xs:boolean"></xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="dailyCalendar">
    <xs:sequence maxOccurs="1">
      <xs:element name="name" minOccurs="1"></xs:element>
      <xs:element name="rangeStartingTime" minOccurs="1" type="xs:string"></xs:element>
      <xs:element name="rangeEndingTime" minOccurs="1" type="xs:string"></xs:element>
      <xs:element name="description" minOccurs="0" type="xs:string"></xs:element>
      <xs:element name="replaceCalendar" minOccurs="0" type="xs:boolean"></xs:element>
      <xs:element name="updateTriggers" minOccurs="0" type="xs:boolean"></xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="jobs">
    <xs:sequence maxOccurs="1">
      <xs:element name="job"></xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="job">
    <xs:annotation>
      <xs:documentation>Define a JobDetail</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="group" type="xs:string" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="jobType" type="xs:string"/>
      <xs:sequence minOccurs="0">
        <xs:element name="durable" type="xs:boolean"/>
        <xs:element name="recover" type="xs:boolean"/>
      </xs:sequence>
      <xs:element name="jobDataMap" type="jobDataMap" minOccurs="0"/>
      <xs:element name="triggers" type="triggers" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="jobDataMap">
    <xs:annotation>
      <xs:documentation>Define a JobDataMap</xs:documentation>
    </xs:annotation>
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="entry" type="entry"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="entry">
    <xs:annotation>
      <xs:documentation>Define a JobDataMap entry</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="key" type="xs:string"/>
      <xs:element name="value" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="triggers">
    <xs:sequence maxOccurs="unbounded">
      <xs:element name="simple" type="simpleTrigger"/>
      <xs:element name="cron" type="cronTrigger"/>
      <xs:element name="calendarInterval" type="calendarIntervalTrigger"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="abstractTrigger" abstract="true">
    <xs:annotation>
      <xs:documentation>Common Trigger definitions</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="group" type="xs:string" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="jobName" type="xs:string"/>
      <xs:element name="jobGroup" type="xs:string" minOccurs="0"/>
      <xs:element name="priority" type="xs:nonNegativeInteger" minOccurs="0"/>
      <xs:element name="calendarName" type="xs:string" minOccurs="0"/>
      <xs:element name="jobDataMap" type="jobDataMap" minOccurs="0"/>
      <xs:sequence minOccurs="0">
        <xs:choice>
          <xs:element name="startTime" type="xs:dateTime"/>
          <xs:element name="startTimeSecondsInFuture" type="xs:nonNegativeInteger"/>
        </xs:choice>
        <xs:element name="end-time"  type="xs:dateTime" minOccurs="0"/>
      </xs:sequence>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="simpleTrigger">
    <xs:annotation>
      <xs:documentation>Define a SimpleTrigger</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="abstractTrigger">
        <xs:sequence>
          <xs:element name="misfireInstruction" type="simpleTriggerMisfireInstruction" minOccurs="0" />
          <xs:sequence minOccurs="0">
            <xs:element name="repeatCount" type="repeatCount"/>
            <xs:element name="repeatInterval" type="xs:nonNegativeInteger"/>
          </xs:sequence>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="repeatCount">
    <xs:annotation>
      <xs:documentation>Number of times to repeat the Trigger (-1 for indefinite)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:integer">
      <xs:minInclusive value="-1"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="cronTrigger">
    <xs:annotation>
      <xs:documentation>Define a CronTrigger</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="abstractTrigger">
        <xs:sequence>
          <xs:element name="misfireInstruction" type="cronTriggerMisfireInstruction"  minOccurs="0"/>
          <xs:element name="cronExpression" type="cronExpression"/>
          <xs:element name="timeZone" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="calendarIntervalTrigger">
    <xs:annotation>
      <xs:documentation>Define a DateIntervalTrigger</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="abstractTrigger">
        <xs:sequence>
          <xs:element name="misfireInstruction" type="dateIntervalTriggerMisfireInstruction"  minOccurs="0"/>
          <xs:element name="repeatInterval" type="xs:nonNegativeInteger"/>
          <xs:element name="repeatIntervalUnit" type="repeatIntervalUnit"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="cronExpression">
    <xs:annotation>
      <xs:documentation>
        Cron expression (see JavaDoc for examples)

        Special thanks to Chris Thatcher (thatcher@butterfly.net) for the regular expression!

        Regular expressions are not my strong point but I believe this is complete,
        with the caveat that order for expressions like 3-0 is not legal but will pass,
        and month and day names must be capitalized.
        If you want to examine the correctness look for the [\s] to denote the
        seperation of individual regular expressions. This is how I break them up visually
        to examine them:

        SECONDS:
        (
        ((([0-9] | [0-5][0-9]),)*([0-9]|[0-5][0-9]))
        | (([\*]|[0-9]|[0-5][0-9])(/|-)([0-9]|[0-5][0-9]))
        | ([\?])
        | ([\*])
        ) [\s]
        MINUTES:
        (
        ((([0-9]|[0-5][0-9]),)*([0-9]|[0-5][0-9]))
        | (([\*]|[0-9]|[0-5][0-9])(/|-)([0-9]|[0-5][0-9]))
        | ([\?])
        | ([\*])
        ) [\s]
        HOURS:
        (
        ((([0-9]|[0-1][0-9]|[2][0-3]),)*([0-9]|[0-1][0-9]|[2][0-3]))
        | (([\*]|[0-9]|[0-1][0-9]|[2][0-3])(/|-)([0-9]|[0-1][0-9]|[2][0-3]))
        | ([\?])
        | ([\*])
        ) [\s]
        DAY OF MONTH:
        (
        ((([1-9]|[0][1-9]|[1-2][0-9]|[3][0-1]),)*([1-9]|[0][1-9]|[1-2][0-9]|[3][0-1])(C)?)
        | (([1-9]|[0][1-9]|[1-2][0-9]|[3][0-1])(/|-)([1-9]|[0][1-9]|[1-2][0-9]|[3][0-1])(C)?)
        | (L)
        | (LW)
        | ([1-9]W)
        | ([1-3][0-9]W)
        | ([\?])
        | ([\*])
        )[\s]
        MONTH:
        (
        ((([1-9]|0[1-9]|1[0-2]),)*([1-9]|0[1-9]|1[0-2]))
        | (([1-9]|0[1-9]|1[0-2])(/|-)([1-9]|0[1-9]|1[0-2]))
        | (((JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC),)*(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))
        | ((JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(-|/)(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))
        | ([\?])
        | ([\*])
        )[\s]
        DAY OF WEEK:
        (
        (([1-7],)*([1-7]))
        | ([1-7](/|-)([1-7]))
        | (((MON|TUE|WED|THU|FRI|SAT|SUN),)*(MON|TUE|WED|THU|FRI|SAT|SUN)(C)?)
        | ((MON|TUE|WED|THU|FRI|SAT|SUN)(-|/)(MON|TUE|WED|THU|FRI|SAT|SUN)(C)?)
        | (([1-7]|(MON|TUE|WED|THU|FRI|SAT|SUN))(L|LW)?)
        | ([1-7]#([1-7])?)
        | ([\?])
        | ([\*])
        )
        YEAR (OPTIONAL):
        (([\s]19[7-9][0-9])|([\s]20[0-9]{2}))?
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((([0-9]|[0-5][0-9]),)*([0-9]|[0-5][0-9]))|(([\*]|[0-9]|[0-5][0-9])(/|-)([0-9]|[0-5][0-9]))|([\?])|([\*]))[\s](((([0-9]|[0-5][0-9]),)*([0-9]|[0-5][0-9]))|(([\*]|[0-9]|[0-5][0-9])(/|-)([0-9]|[0-5][0-9]))|([\?])|([\*]))[\s](((([0-9]|[0-1][0-9]|[2][0-3]),)*([0-9]|[0-1][0-9]|[2][0-3]))|(([\*]|[0-9]|[0-1][0-9]|[2][0-3])(/|-)([0-9]|[0-1][0-9]|[2][0-3]))|([\?])|([\*]))[\s](((([1-9]|[0][1-9]|[1-2][0-9]|[3][0-1]),)*([1-9]|[0][1-9]|[1-2][0-9]|[3][0-1])(C)?)|(([1-9]|[0][1-9]|[1-2][0-9]|[3][0-1])(/|-)([1-9]|[0][1-9]|[1-2][0-9]|[3][0-1])(C)?)|(L)|(LW)|([1-9]W)|([1-3][0-9]W)|([\?])|([\*]))[\s](((([1-9]|0[1-9]|1[0-2]),)*([1-9]|0[1-9]|1[0-2]))|(([1-9]|0[1-9]|1[0-2])(/|-)([1-9]|0[1-9]|1[0-2]))|(((JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC),)*(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))|((JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(-|/)(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))|([\?])|([\*]))[\s]((([1-7],)*([1-7]))|([1-7](/|-)([1-7]))|(((MON|TUE|WED|THU|FRI|SAT|SUN),)*(MON|TUE|WED|THU|FRI|SAT|SUN)(C)?)|((MON|TUE|WED|THU|FRI|SAT|SUN)(-|/)(MON|TUE|WED|THU|FRI|SAT|SUN)(C)?)|(([1-7]|(MON|TUE|WED|THU|FRI|SAT|SUN))?(L|LW)?)|([1-7]#([1-7])?)|([\?])|([\*]))(([\s]19[7-9][0-9])|([\s]20[0-9]{2}))?"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="repeat-countType">
    <xs:annotation>
      <xs:documentation>Number of times to repeat the Trigger (-1 for indefinite)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:integer">
      <xs:minInclusive value="-1"/>
    </xs:restriction>
  </xs:simpleType>


  <xs:simpleType name="simpleTriggerMisfireInstruction">
    <xs:annotation>
      <xs:documentation>Simple Trigger Misfire Instructions</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="SmartPolicy"/>
      <xs:pattern value="RescheduleNextWithExistingCount"/>
      <xs:pattern value="RescheduleNextWithRemainingCount"/>
      <xs:pattern value="RescheduleNowWithExistingRepeatCount"/>
      <xs:pattern value="RescheduleNowWithRemainingRepeatCount"/>
      <xs:pattern value="FireNow"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="cronTriggerMisfireInstruction">
    <xs:annotation>
      <xs:documentation>Simple Trigger Misfire Instructions</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="SmartPolicy"/>
      <xs:pattern value="DoNothing"/>
      <xs:pattern value="FireOnceNow"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="dateIntervalTriggerMisfireInstruction">
    <xs:annotation>
      <xs:documentation>Date Interval Trigger Misfire Instructions</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="SmartPolicy"/>
      <xs:pattern value="DoNothing"/>
      <xs:pattern value="FireOnceNow"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="repeatIntervalUnit">
    <xs:annotation>
      <xs:documentation>Interval Units</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="Day"/>
      <xs:pattern value="Hour"/>
      <xs:pattern value="Minute"/>
      <xs:pattern value="Month"/>
      <xs:pattern value="Second"/>
      <xs:pattern value="Week"/>
      <xs:pattern value="Year"/>
    </xs:restriction>
  </xs:simpleType>

</xs:schema>
